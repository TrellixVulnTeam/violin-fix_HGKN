/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/explore-season.js":
/*!*******************************!*\
  !*** ./src/explore-season.js ***!
  \*******************************/
/***/ (() => {

eval("/*set own values*/\nconst CARD_PEN_OFFSET = 10,\n      //displacement of the cards\nCARD_SWITCH_RANGE = \"130%\";\nconst CARD_ARRAY = [...document.querySelectorAll('div[class*=\"card\"]')];\n/* Do not change this */\n\nconst COUNT_OF_CARDS = CARD_ARRAY.length;\nlet last_element = CARD_ARRAY[CARD_ARRAY.length - 1];\nlet isMoving = false;\nlet offsetArray = [],\n    offset = 0,\n    l = CARD_ARRAY.length;\n\nfor (let i = 1; i <= l; i++) {\n  offsetArray.push(offset);\n  offset += CARD_PEN_OFFSET;\n}\n\nsetCardOffset();\n\nfunction setCardOffset() {\n  CARD_ARRAY.forEach(function (item, index) {\n    item.style.zIndex = Math.abs(index - COUNT_OF_CARDS);\n    item.style.transform = `translate(${offsetArray[index]}px, ${offsetArray[index]}px)`;\n  });\n}\n/******************************************************************/\n\n\nwindow.addEventListener(\"keydown\", function (e) {\n  cardSwitching(e);\n});\n\nfunction cardSwitching(e) {\n  let animationObject = {},\n      previousSibling,\n      scrolling = \"\";\n  var clickIcon = e.path[0];\n  /* return when you scroll during the animation of a card */\n\n  if (isMoving) return;\n  if (e.keyCode !== 38 && e.keyCode !== 40 && e.keyCode !== undefined) return;\n\n  for (let index of CARD_ARRAY) {\n    if (parseInt(window.getComputedStyle(index).zIndex) === CARD_ARRAY.length || parseInt(index.style.zIndex) === CARD_ARRAY.length) {\n      /*switch the rearmost card */\n      if (e.keyCode === 38 || clickIcon.classList.contains(\"fa-arrow-alt-circle-up\")) {\n        //deltaY < 0 -> scrolling up\n        previousSibling = index.previousElementSibling;\n        if (previousSibling === null) previousSibling = last_element;\n      }\n\n      animationObject = e.keyCode === 38 || clickIcon.classList.contains(\"fa-arrow-alt-circle-up\") ? previousSibling : e.deltaY > 0 || e.keyCode === 40 || clickIcon.classList.contains(\"fa-arrow-alt-circle-down\") ? index : \"\";\n      animationObject.style.transform = `translate(0px, -${CARD_SWITCH_RANGE})`;\n      scrolling = e.keyCode === 38 || clickIcon.classList.contains(\"fa-arrow-alt-circle-up\") ? \"up\" : e.keyCode === 40 || clickIcon.classList.contains(\"fa-arrow-alt-circle-down\") ? \"down\" : \"\";\n      isMoving = true;\n    }\n  }\n\n  if (animationObject !== undefined) {\n    animationObject.addEventListener(\"transitionend\", function () {\n      if (scrolling === \"down\") {\n        animationObject.style.zIndex = 0;\n        animationObject.style.transform = `translate(${offsetArray[COUNT_OF_CARDS]}px, ${offsetArray[COUNT_OF_CARDS]}px)`;\n        offsetSwitch(scrolling);\n      } else if (scrolling === \"up\") {\n        offsetSwitch(scrolling);\n        animationObject.style.zIndex = COUNT_OF_CARDS;\n        animationObject.style.transform = `translate(0px, 0px)`;\n      }\n\n      scrolling = \"\";\n    }, {\n      once: true\n    });\n  }\n}\n\nfunction offsetSwitch(scrolling) {\n  for (let index of CARD_ARRAY) {\n    index.style.zIndex = scrolling === \"down\" ? parseInt(index.style.zIndex) + 1 : parseInt(index.style.zIndex) - 1;\n    let offsetIndex = Math.abs(parseInt(index.style.zIndex) - COUNT_OF_CARDS);\n    index.style.transform = `translate(${offsetArray[offsetIndex]}px, ${offsetArray[offsetIndex]}px)`;\n    index.addEventListener(\"transitionend\", () => isMoving = false, {\n      once: true\n    });\n  }\n}\n\nfunction panelDisplay(e) {\n  var target = e.target;\n  var parent = target.parentNode;\n  var id = parent.getAttribute(\"href\");\n  var panels = document.querySelectorAll(\".panel\");\n\n  if (target.className != \"row-2_title\") {\n    for (var i = 0; i < panels.length; i++) {\n      panels[i].style.display = \"none\";\n    }\n  }\n\n  var matchingId = document.querySelector(id);\n\n  if (matchingId != null) {\n    matchingId.style.display = \"block\";\n  }\n}\n\nwindow.onload = function addStyles() {\n  var cardStackPrevious = document.querySelectorAll(\".previous\");\n\n  for (var i = 0; i < cardStackPrevious.length; i++) {\n    // PREVIOUS CARD TEXT AND FUNCTIONALITY\n    var prevIcon = document.createElement(\"div\");\n    prevIcon.innerHTML = '<i class=\"far fa-arrow-alt-circle-up\"></i>';\n    cardStackPrevious[i].appendChild(prevIcon);\n    var prevText = document.createElement(\"h6\");\n    prevText.innerHTML = \"Previous Card\";\n    prevText.classList.add(\"previous-card-text\");\n    cardStackPrevious[i].appendChild(prevText);\n    cardStackPrevious[i].addEventListener(\"click\", function (e) {\n      cardSwitching(e);\n    });\n  }\n\n  var cardStackNext = document.querySelectorAll(\".next\");\n\n  for (var x = 0; x < cardStackNext.length; x++) {\n    // NEXT CARD TEXT AND FUNCTIONALITY\n    var nextText = document.createElement(\"h6\");\n    nextText.innerHTML = \"Next Card\";\n    nextText.classList.add(\"next-card-text\");\n    cardStackNext[x].appendChild(nextText);\n    var nextIcon = document.createElement(\"div\");\n    nextIcon.innerHTML = '<i class=\"far fa-arrow-alt-circle-down\"></i>';\n    cardStackNext[x].appendChild(nextIcon);\n    cardStackNext[x].addEventListener(\"click\", function (e) {\n      cardSwitching(e);\n    });\n  }\n\n  var cards = document.querySelectorAll(\".card\");\n\n  for (var j = 0; j < cards.length; j++) {\n    var link = cards[j].querySelector(\"a\");\n  }\n\n  link.onclick = addEventListener(\"click\", function (e) {\n    var target = e.target;\n\n    if (target instanceof HTMLAnchorElement || target.parentElement instanceof HTMLAnchorElement) {\n      panelDisplay(e);\n    }\n\n    backButton(e);\n  }, true);\n\n  function backButton(e) {\n    var panels = document.querySelectorAll(\".main\");\n\n    for (var m = 0; m < panels.length; m++) {\n      if (panels[m].querySelector(\"#button\") == null) {\n        var backToTop = document.createElement(\"a\");\n        backToTop.innerHTML = \"BACK TO SEASON\";\n        backToTop.setAttribute(\"id\", \"button\");\n        backToTop.setAttribute(\"href\", \"#top-of-page\");\n        panels[m].appendChild(backToTop);\n        var button2 = panels[m].querySelectorAll(\"#button_2\");\n\n        if (button2.length == 0) {\n          backToTop.classList.add(\"single-button\");\n        }\n      }\n    }\n\n    var row3 = document.querySelectorAll(\"ul\");\n\n    for (var x = 0; x < row3.length; x++) {\n      if (row3[x].classList.contains(\"row-3\")) {\n        if (row3[x].querySelector(\"#button_2\") == null) {\n          var backToLastDiv = document.createElement(\"a\");\n          backToLastDiv.innerHTML = e.target.innerHTML;\n          backToLastDiv.setAttribute(\"id\", \"button_2\");\n          var backToTitle = document.querySelectorAll(\"h1\");\n          var matchingTitle;\n\n          for (var q = 0; q < backToTitle.length; q++) {\n            if (backToTitle[q].innerHTML == e.target.innerHTML) {\n              matchingTitle = backToTitle[q];\n              var stringCombined = matchingTitle.innerHTML.split(\" \").join(\"\");\n              matchingTitle.setAttribute(\"id\", stringCombined); // var newMatchingTitle = \"#\" + stringCombined;\n              // backToLastDiv.setAttribute(\"href\", newMatchingTitle);\n            }\n          }\n\n          row3[x].appendChild(backToLastDiv);\n          var classToggle = row3[x].nextElementSibling;\n          classToggle.classList.remove(\"single-button\");\n\n          backToLastDiv.onclick = () => {\n            console.log(backToLastDiv);\n            var toggleDiv = backToLastDiv.id;\n            var main = document.querySelectorAll(\".main\");\n\n            for (h = 0; h < main.length; h++) {\n              var findDiv = main[h].querySelector(toggleDiv);\n\n              if (findDiv != null) {\n                console.log(findDiv); // findDiv.scrollIntoView();\n\n                var divParent = findDiv.parentElement.parentElement;\n                divParent.style.display = \"block\";\n              }\n            }\n          };\n        }\n      }\n    }\n  }\n\n  var row2Cards = document.querySelectorAll(\".row-2_item\");\n\n  for (var k = 0; k < row2Cards.length; k++) {\n    row2Cards[k].addEventListener(\"click\", function (e) {\n      panelDisplay(e);\n    });\n  }\n};\n\n//# sourceURL=webpack://violin-fix/./src/explore-season.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/explore-season.js"]();
/******/ 	
/******/ })()
;